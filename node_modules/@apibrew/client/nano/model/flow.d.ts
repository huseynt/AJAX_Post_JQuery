export interface Flow {
    id: string;
    name: string;
    trigger: string;
    version: number;
    statements: Statement[];
}
export declare const FlowEntityInfo: {
    namespace: string;
    resource: string;
    restPath: string;
};
export interface EventParams {
    action: Action;
    responds: boolean;
    finalizes: boolean;
    annotations: {
        [key: string]: string;
    };
    sync: boolean;
    type: string;
    order: Order;
}
export interface ActionParams {
    type: string;
}
export interface ApiSaveParams {
    type: string;
    payload: object;
}
export interface ApiLoadParams {
    type: string;
    match: object;
    params: object;
}
export interface AssignParams {
    left: string;
    expression: string;
}
export interface FunctionCallParams {
    name: string;
    params: object;
}
export interface CodeParams {
    content: string;
}
export interface ConditionParams {
    fail: Statement[];
    pass: Statement[];
    condition: string;
}
export interface FailParams {
    message: string;
}
export interface Statement {
    variable: string;
    checkResult: boolean;
    kind: Kind;
    params: object;
}
export declare enum Action {
    CREATE = "CREATE",
    GET = "GET",
    LOAD = "LOAD",
    UPDATE = "UPDATE",
    DELETE = "DELETE",
    LIST = "LIST"
}
export declare enum Order {
    BEFORE = "BEFORE",
    AFTER = "AFTER"
}
export declare enum Kind {
    ACTION = "ACTION",
    EVENT = "EVENT",
    API_CREATE = "API_CREATE",
    API_GET = "API_GET",
    API_LOAD = "API_LOAD",
    API_UPDATE = "API_UPDATE",
    API_DELETE = "API_DELETE",
    API_LIST = "API_LIST",
    CODE = "CODE",
    FAIL = "FAIL",
    ASSIGN = "ASSIGN",
    CONDITION = "CONDITION",
    HTTP_CALL = "HTTP_CALL",
    FUNCTION_CALL = "FUNCTION_CALL",
    TEMPLATE_CALL = "TEMPLATE_CALL",
    END = "END"
}
export declare const FlowResource: unknown;
