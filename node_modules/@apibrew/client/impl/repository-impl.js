import { WatcherImpl } from "./watcher-impl";
var RepositoryImpl = /** @class */ (function () {
    function RepositoryImpl(client, entityInfo) {
        this.client = client;
        this.entityInfo = entityInfo;
    }
    RepositoryImpl.prototype.create = function (record) {
        return this.client.createRecord(this.entityInfo, record);
    };
    RepositoryImpl.prototype.get = function (id, resolveReferences) {
        return this.client.getRecord(this.entityInfo, { id: id, resolveReferences: resolveReferences });
    };
    RepositoryImpl.prototype.update = function (record) {
        return this.client.updateRecord(this.entityInfo, record);
    };
    RepositoryImpl.prototype.delete = function (id) {
        return this.client.deleteRecord(this.entityInfo, id);
    };
    RepositoryImpl.prototype.apply = function (record) {
        return this.client.applyRecord(this.entityInfo, record);
    };
    RepositoryImpl.prototype.load = function (record, resolveReferences) {
        return this.client.loadRecord(this.entityInfo, record, resolveReferences);
    };
    RepositoryImpl.prototype.list = function (params) {
        if (params === void 0) { params = {}; }
        return this.client.listRecords(this.entityInfo, params);
    };
    RepositoryImpl.prototype.watch = function (eventConsumer) {
        return new WatcherImpl(this.client, this.entityInfo, eventConsumer);
    };
    return RepositoryImpl;
}());
export { RepositoryImpl };
