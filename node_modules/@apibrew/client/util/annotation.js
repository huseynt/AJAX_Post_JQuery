var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
export var isAnnotationEnabled = function (annotations, annotation) {
    return (annotations === null || annotations === void 0 ? void 0 : annotations[annotation]) === 'true';
};
export var getAnnotation = function (annotations, annotation, defaultValue) {
    var _a, _b;
    return (_b = (_a = annotations === null || annotations === void 0 ? void 0 : annotations[annotation]) !== null && _a !== void 0 ? _a : defaultValue) !== null && _b !== void 0 ? _b : '';
};
export var withBooleanAnnotation = function (annotations, annotation, value) {
    var newAnnotations = annotations ? __assign({}, annotations) : {};
    if (value) {
        newAnnotations[annotation] = "true";
    }
    else {
        delete (newAnnotations[annotation]);
    }
    return newAnnotations;
};
