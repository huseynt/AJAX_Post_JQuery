var BooleanExpressionBuilder = /** @class */ (function () {
    function BooleanExpressionBuilder() {
    }
    BooleanExpressionBuilder.and = function () {
        var expressions = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            expressions[_i] = arguments[_i];
        }
        return {
            and: expressions
        };
    };
    BooleanExpressionBuilder.or = function () {
        var expressions = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            expressions[_i] = arguments[_i];
        }
        return {
            or: expressions
        };
    };
    BooleanExpressionBuilder.not = function (expression) {
        return {
            not: expression
        };
    };
    BooleanExpressionBuilder.equal = function (property, value) {
        return {
            equal: {
                left: {
                    property: property
                },
                right: {
                    value: value
                }
            }
        };
    };
    BooleanExpressionBuilder.eq = function (property, value) {
        return this.equal(property, value);
    };
    BooleanExpressionBuilder.notEqual = function (property, value) {
        return this.not(this.equal(property, value));
    };
    BooleanExpressionBuilder.greaterThan = function (property, value) {
        return {
            greaterThan: {
                left: {
                    property: property
                },
                right: {
                    value: value
                }
            }
        };
    };
    BooleanExpressionBuilder.gt = function (property, value) {
        return this.greaterThan(property, value);
    };
    BooleanExpressionBuilder.greaterThanOrEqual = function (property, value) {
        return {
            greaterThanOrEqual: {
                left: {
                    property: property
                },
                right: {
                    value: value
                }
            }
        };
    };
    BooleanExpressionBuilder.gte = function (property, value) {
        return this.greaterThanOrEqual(property, value);
    };
    BooleanExpressionBuilder.lessThan = function (property, value) {
        return {
            lessThan: {
                left: {
                    property: property
                },
                right: {
                    value: value
                }
            }
        };
    };
    BooleanExpressionBuilder.lt = function (property, value) {
        return this.lessThan(property, value);
    };
    BooleanExpressionBuilder.lessThanOrEqual = function (property, value) {
        return {
            lessThanOrEqual: {
                left: {
                    property: property
                },
                right: {
                    value: value
                }
            }
        };
    };
    BooleanExpressionBuilder.lte = function (property, value) {
        return this.lessThanOrEqual(property, value);
    };
    BooleanExpressionBuilder.in = function (property, values) {
        return {
            in: {
                left: {
                    property: property
                },
                right: {
                    value: values
                }
            }
        };
    };
    BooleanExpressionBuilder.notIn = function (property, values) {
        return this.not(this.in(property, values));
    };
    BooleanExpressionBuilder.isNull = function (property) {
        return {
            isNull: {
                property: property
            }
        };
    };
    BooleanExpressionBuilder.isNotNull = function (property) {
        return this.not(this.isNull(property));
    };
    return BooleanExpressionBuilder;
}());
export { BooleanExpressionBuilder };
